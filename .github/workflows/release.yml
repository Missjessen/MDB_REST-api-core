name: Node.js CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
    name: "🧪 CI: Install, Build & (optional) Test"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["20.x"]      # Skiftet fra 18.x til 20.x
        mongodb-version: ["8.0"]

    env:
      DBHOST: ${{ secrets.DBHOST }}
      TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}
      JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}

    steps:
      - name: 📂 Checkout repo
        uses: actions/checkout@v3

      - name: 🛠️ Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: 🐳 Start MongoDB ${{ matrix.mongodb-version }} (via Docker)
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: 📝 Create .env file
        run: |
          echo "DBHOST=${{ secrets.DBHOST }}"       >> .env
          echo "TOKEN_SECRET=${{ secrets.TOKEN_SECRET }}" >> .env
          echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> .env

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

  release:
    name: "🚀 Release (semantic-release)"
    runs-on: ubuntu-latest
    needs: test
    if: "github.ref == 'refs/heads/main'"

    steps:
      - name: 📂 Checkout repo
        uses: actions/checkout@v3

      - name: 🛠️ Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: 📦 Install dependencies (lockfile)
        run: npm ci

      - name: ✨ Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN:    ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
